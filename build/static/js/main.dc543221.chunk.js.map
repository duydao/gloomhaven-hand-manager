{"version":3,"sources":["CharacterSelection.js","PerkSelection.js","HandSelection.js","CardContainer.js","PlayArea.js","App.js","serviceWorker.js","index.js"],"names":["CharacterContainer","character","characterName","handleStaffOfCommand","selectCharacter","id","name","onClick","className","src","initials","alt","type","onChange","e","target","checked","align","noSpoilerName","CharacterSelection","availableCharacters","handleGameChange","handleSetCharacter","handleSetLevel","level","useState","setCharacterName","bladeSwarmUnlocked","setBladeSwarmUnlocked","cookies","Cookies","firstRow","slice","secondRow","thirdRow","fourthRow","fifthRow","sixthRow","alert","useEffect","cookieInfo","getAll","parseInt","action","style","color","event","value","map","key","disabled","title","PerkSelection","modifyModifierDeck","handleSetStage","characterPerks","resetModifierDeck","isChecked","perks","setPerk","changesToModifierDeck","setChangesToModifierDeck","cookie","handlePerkChange","perkId","checkboxId","prevPerks","newPerks","changes","find","perk","newChangesToModifierDeck","forEach","change","_","remove","modifierChanges","perkData","checkboxes","checkbox","label","set","path","maxAge","cardsToAdd","filter","formattedCardsToAdd","card","i","number","push","cardTitle","image","cardsToRemove","formattedCardsToRemove","handleConfirmPerks","CardTableRowLevelOne","cardIsInHand","handleCardClick","cardSet","enhancementOptions","handleEnhancementChange","enhancements","enhancement","EnhancementIcon","index","enhancementOption","CardTableRowTwoLevels","firstCardSet","firstLevel","secondCardSet","secondLevel","SelectedHand","hand","toLowerCase","top","left","HandSelection","addCardToHand","handleUpdateCharacter","removeCardFromHand","cards","startingCards","levelTwoCards","levelThreeCards","levelFourCards","levelFiveCards","levelSixCards","levelSevenCards","levelEightCards","levelNineCards","cardToCheck","some","updatedData","selectedCard","previousSibling","cardFromCharacter","length","handSize","CardContainer","cardClass","containerClass","cardSelected","mustLose","tracker","trackerButtons","setTrackerButtons","active","newTrackerButtons","handleClickTracker","DiscardedCards","discardedCards","handleMoveCardsBackToHand","moveDiscardedCardsToLost","removeCardFromDiscard","selectedCards","setSelectedCards","resting","setResting","canRerollLost","setCanRerollLost","longResting","setLongResting","cardToLose","setCardToLose","handleOnClick","cardClicked","firstChild","characterCard","newSelection","shift","cardBoarder","colSpan","border","textAlign","Math","floor","random","handleShortRest","Object","keys","cardsToChooseFrom","newCardToLose","handleRerollLostCard","ActiveCards","activeCards","moveActiveCardToDiscard","moveActiveCardToLost","setSelectedCard","tagName","cardToSelect","ChosenCards","chosenCards","modifierDeck","moveCardToActive","moveCardToDiscard","moveCardToLost","staffOfCommand","ModifierDeck","playedModifyCards","setPlayedModifyCards","localModifierDeck","setLocalModifierDeck","mustShuffle","setMustShuffle","extraBlessCount","setExtraBlessCount","extraCurseCount","setExtraCurseCount","displayModal","setDisplayModal","minus1Card","curseCard","blessingCard","newLocalModifierDeck","playedCard","handleFlipModifier","addPlayedCards","shuffledModifierDeck","playedMinusBlessCurseMinusOne","j","temp","handleShuffleModifierDeck","handleAddBless","handleAddCurse","handleAddMinusOneCard","handleResetModifierDeck","ModifierModal","handleClose","playedModifierCards","show","display","LostCards","lostCards","moveLostCardToHand","HandCards","moveCardsToChosen","moveThirdCardToChosen","hasCardsInPlay","rowOne","rowTwo","rowThree","PlayArea","setHand","setHasCardsInPlay","setChosenCards","setDiscardedCards","setActiveCards","setLostCards","anyChosenCardsLeft","newArray","cardActivated","indexOf","newChosenCards","cardDiscarded","cardLost","newActiveCards","cardsRecovered","resetHand","newDiscardedCards","newLostCards","newHand","Feedback","FeedbackModal","hideModal","setTitle","setType","body","setBody","submitted","setSubmitted","submissionError","setSubmissionError","showErrors","setShowErrors","octokit","Octokit","require","auth","process","ThemeProvider","StackView","spacing","Field","inline","helpContent","Input","Select","emptyValue","tooltip","Option","TextArea","height","placeholder","Button","issues","create","owner","repo","labels","catch","err","href","App","stage","setStage","game","setGame","setCharacter","setLevel","setModifierDeck","setStaffOfCommand","allCharacterData","gameName","getGameCharacters","characterData","x","get","selected","newModifierDeck","concat","modifierWithCardsRemoved","array","attr","findWithAttr","splice","cardToAdd","cardReceived","cardToRemove","previousHand","reject","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.dc543221.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Konami from 'react-konami-code'\nimport Cookies from 'universal-cookie'\n\nfunction CharacterSelection({\n  availableCharacters,\n  handleGameChange,\n  handleSetCharacter,\n  handleSetLevel,\n  handleStaffOfCommand,\n  level,\n}) {\n  const [characterName, setCharacterName] = useState('')\n  const [bladeSwarmUnlocked, setBladeSwarmUnlocked] = useState(false)\n  const cookies = new Cookies()\n  const firstRow = availableCharacters.slice(0, 3)\n  const secondRow = availableCharacters.slice(3, 6)\n  const thirdRow = availableCharacters.slice(6, 9)\n  const fourthRow = availableCharacters.slice(9, 12)\n  const fifthRow = availableCharacters.slice(12, 15)\n  const sixthRow = availableCharacters.slice(15, 18)\n\n  function selectCharacter(characterName) {\n    setCharacterName(characterName)\n  }\n\n  if (bladeSwarmUnlocked) {\n    alert(`You unlocked bladeswarm`)\n  }\n\n  function handleUnlockBladeSwarm() {\n    setBladeSwarmUnlocked(true)\n  }\n\n  useEffect(() => {\n    let cookieInfo = cookies.getAll()\n    if (cookieInfo.character) {\n      selectCharacter(cookieInfo.character)\n    }\n    if (cookieInfo.level) {\n      handleSetLevel(parseInt(cookieInfo.level, 10))\n    }\n  }, [])\n\n  return (\n    <>\n      <Konami action={handleUnlockBladeSwarm} />\n      <div id=\"select-className-section\" align=\"center\">\n        <h2 className=\"header\" align=\"center\" style={{ color: 'white' }}>\n          Select Your Character\n        </h2>\n        <select\n          id=\"game-selector\"\n          onChange={(event) => handleGameChange(event.target.value)}\n        >\n          <option value=\"gloomhaven\">Gloomhaven</option>\n        </select>\n        <table>\n          <tbody>\n            <tr>\n              {firstRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.name}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {secondRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.name}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {thirdRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.name}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {fourthRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.name}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {fifthRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.name}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {sixthRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.name}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n        <div id=\"level-selection\" align=\"center\">\n          <h2 className=\"header\" align=\"center\" style={{ color: 'white' }}>\n            Select Your Level\n          </h2>\n          <p id=\"level-counter\">Level: {level}</p>\n          <br />\n          <button\n            id=\"level-down\"\n            className=\"level-modifier\"\n            type=\"button\"\n            onClick={() => handleSetLevel(level - 1)}\n            disabled={level < 2}\n          >\n            -\n          </button>\n          <button\n            id=\"level-up\"\n            className=\"level-modifier\"\n            type=\"button\"\n            onClick={() => handleSetLevel(level + 1)}\n            disabled={level > 8}\n          >\n            +\n          </button>\n          <br />\n        </div>\n        <br />\n        <button\n          id=\"confirm-character-button\"\n          className=\"button\"\n          type=\"button\"\n          align=\"center\"\n          title=\"Must Select A Character\"\n          onClick={() => handleSetCharacter(characterName)}\n          disabled={characterName === ''}\n        >\n          Confirm Character\n        </button>\n      </div>\n    </>\n  )\n}\n\nfunction CharacterContainer({\n  character,\n  characterName,\n  handleStaffOfCommand,\n  selectCharacter,\n}) {\n  return (\n    <td\n      id={character.name === 'beastTyrant' ? 'beastTyrantOption' : ''}\n      onClick={() => selectCharacter(character.name)}\n    >\n      <img\n        id={character.name}\n        className={\n          characterName === character.name\n            ? 'character active character-selected'\n            : 'character active'\n        }\n        src={`./images/character-icons/${character.initials}-icon.png`}\n        alt={character.name}\n      />\n      <br />\n      {character.name === 'beastTyrant' && (\n        <div>\n          <div\n            id=\"beastTyrantStaffLabel\"\n            className={\n              characterName === 'beastTyrant' ? 'solo-scenario-label' : 'hiding'\n            }\n          >\n            Completed solo scenario\n          </div>\n          <label className=\"switch\">\n            <input\n              id=\"beastTyrantSolo\"\n              type=\"checkbox\"\n              onChange={(e) => handleStaffOfCommand(e.target.checked)}\n            />\n            <span\n              id=\"beastTyrantStaff\"\n              className={\n                characterName === 'beastTyrant' ? 'slider' : 'slider hiding'\n              }\n            />\n          </label>\n        </div>\n      )}\n      <p className=\"character-title\" align=\"center\">\n        {character.noSpoilerName}\n      </p>\n    </td>\n  )\n}\n\nexport default CharacterSelection\n","import React, { useState, useEffect } from 'react'\nimport _ from 'lodash'\nimport Cookies from 'universal-cookie'\n// TODO: How do I persist what perks have been selected if someone navigates away and comes back?\n\nfunction PerkSelection({\n  modifyModifierDeck,\n  character,\n  handleSetStage,\n  characterPerks,\n  resetModifierDeck,\n}) {\n  const [perks, setPerk] = useState([\n    {\n      id: 1,\n      isChecked: false,\n    },\n    {\n      id: 2,\n      isChecked: false,\n    },\n    {\n      id: 3,\n      isChecked: false,\n    },\n    {\n      id: 4,\n      isChecked: false,\n    },\n    {\n      id: 5,\n      isChecked: false,\n    },\n    {\n      id: 6,\n      isChecked: false,\n    },\n    {\n      id: 7,\n      isChecked: false,\n    },\n    {\n      id: 8,\n      isChecked: false,\n    },\n    {\n      id: 9,\n      isChecked: false,\n    },\n    {\n      id: 10,\n      isChecked: false,\n    },\n    {\n      id: 11,\n      isChecked: false,\n    },\n    {\n      id: 12,\n      isChecked: false,\n    },\n    {\n      id: 13,\n      isChecked: false,\n    },\n    {\n      id: 14,\n      isChecked: false,\n    },\n    {\n      id: 15,\n      isChecked: false,\n    },\n  ])\n  const [changesToModifierDeck, setChangesToModifierDeck] = useState([])\n  const cookie = new Cookies()\n\n  useEffect(() => {\n    resetModifierDeck()\n    let cookieInfo = cookie.getAll()\n    if (cookieInfo.perks) {\n      setPerk(cookieInfo.perks)\n    }\n    if (cookieInfo.modifierChanges) {\n      setChangesToModifierDeck(cookieInfo.modifierChanges)\n    }\n  }, [])\n\n  function handlePerkChange(perkId, checkboxId, value) {\n    // Update value of perk in state\n    setPerk((prevPerks) => {\n      let newPerks = [...prevPerks]\n      newPerks[checkboxId].isChecked = value\n      return newPerks\n    })\n\n    // Find changes needed to Attack Modifier based on this perk\n    let changes = characterPerks.find((perk) => perk.id === perkId).changes\n\n    // Add or remove the changes for this perk from state, which is used in handleConfirmPerks()\n    if (value === true) {\n      setChangesToModifierDeck([...changesToModifierDeck, ...changes])\n    } else {\n      let newChangesToModifierDeck = [...changesToModifierDeck]\n      changes.forEach((change) => {\n        _.remove(newChangesToModifierDeck, change)\n      })\n      setChangesToModifierDeck(newChangesToModifierDeck)\n    }\n  }\n\n  function handleConfirmPerks() {\n    // Add perks to cookie\n    cookie.set('perks', perks, {\n      path: '/',\n      maxAge: 31104000,\n    })\n\n    cookie.set('modifierChanges', changesToModifierDeck, {\n      path: '/',\n      maxAge: 31104000,\n    })\n\n    // TODO: Got each function working independantly, but they don't work together. Need to combine these two functions into a single function and rework it.\n    // Adding cards to the modifier deck\n    let cardsToAdd = _.filter(changesToModifierDeck, { action: 'add' })\n    let formattedCardsToAdd = []\n    cardsToAdd.forEach((card) => {\n      for (let i = 0; i < card.number; i++) {\n        formattedCardsToAdd.push({\n          name: card.cardTitle,\n          image: `./images/attack-modifiers/${character.initials}/am-${character.initials}-${card.cardTitle}.png`,\n        })\n      }\n    })\n\n    // Removing cards from the modifier deck\n    let cardsToRemove = _.filter(changesToModifierDeck, { action: 'remove' })\n    // Send array of formatted card names to remove\n    let formattedCardsToRemove = []\n    cardsToRemove.forEach((card) => {\n      for (let i = 0; i < card.number; i++) {\n        formattedCardsToRemove.push({ name: card.cardTitle })\n      }\n    })\n    modifyModifierDeck(formattedCardsToRemove, formattedCardsToAdd)\n    handleSetStage('selectHand')\n  }\n\n  return (\n    <>\n      <div id=\"perk-section\" align=\"center\">\n        <h2 id=\"perks-header\" className=\"header\">\n          Select Your Perks\n        </h2>\n        <div className=\"perks\">\n          {characterPerks.map((perkData) => (\n            <div key={perkData.id}>\n              {perkData.checkboxes.map((checkbox) => (\n                <div\n                  key={checkbox.id}\n                  className={\n                    perks[checkbox.id].isChecked\n                      ? 'checkbox checked'\n                      : 'checkbox'\n                  }\n                  onClick={\n                    perks[checkbox.id].isChecked\n                      ? () => handlePerkChange(perkData.id, checkbox.id, false)\n                      : () => handlePerkChange(perkData.id, checkbox.id, true)\n                  }\n                />\n              ))}\n              <p>{perkData.label}</p>\n            </div>\n          ))}\n          <button\n            id=\"confirmPerksButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => handleConfirmPerks()}\n          >\n            Confirm Perks\n          </button>\n        </div>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSetStage('selectCharacter')}\n        >\n          Go Back To Character Select\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default PerkSelection\n","import React from 'react'\n\nfunction HandSelection({\n  addCardToHand,\n  character,\n  level,\n  hand,\n  handleUpdateCharacter,\n  handleSetStage,\n  removeCardFromHand,\n}) {\n  // TODO: move cards over to use the CardContainer component\n  const firstRow = character.cards.slice(0, 5)\n  const secondRow = character.cards.slice(5, 10)\n  const thirdRow = character.cards.slice(10, character.startingCards)\n  const levelTwoCards = character.cards.filter((card) => {\n    return card.level === 2\n  })\n  const levelThreeCards = character.cards.filter((card) => {\n    return card.level === 3\n  })\n  const levelFourCards = character.cards.filter((card) => {\n    return card.level === 4\n  })\n  const levelFiveCards = character.cards.filter((card) => {\n    return card.level === 5\n  })\n  const levelSixCards = character.cards.filter((card) => {\n    return card.level === 6\n  })\n  const levelSevenCards = character.cards.filter((card) => {\n    return card.level === 7\n  })\n  const levelEightCards = character.cards.filter((card) => {\n    return card.level === 8\n  })\n  const levelNineCards = character.cards.filter((card) => {\n    return card.level === 9\n  })\n  const enhancementOptions = [\n    '+1',\n    'Leap',\n    'Wind',\n    'Ice',\n    'Fire',\n    'Leaf',\n    'Sun',\n    'Moon',\n    'Wild Element',\n    'Bless',\n    'Curse',\n    'Disarm',\n    'Immobilize',\n    'Wound',\n    'Muddle',\n    'Poison',\n    'Strengthen',\n    'Area',\n  ]\n\n  function cardIsInHand(cardToCheck) {\n    if (hand.some((card) => card.title === cardToCheck.title)) {\n      return true\n    }\n    return false\n  }\n\n  function handleEnhancementChange(cardTitle, id, e) {\n    let updatedData = { ...character }\n    const card = updatedData.cards.find((card) => card.title === cardTitle)\n    let enhancement = card.enhancements.find(\n      (enhancement) => enhancement.id === id\n    )\n    enhancement.enhancement = e.target.value\n    handleUpdateCharacter(updatedData)\n  }\n\n  function handleCardClick(selectedCard) {\n    while (selectedCard.className === 'enhancement-icon') {\n      selectedCard = selectedCard.previousSibling\n    }\n    let cardFromCharacter = character.cards.find(\n      (card) => card.title === selectedCard.alt\n    )\n    if (cardIsInHand(cardFromCharacter)) {\n      removeCardFromHand(cardFromCharacter)\n    } else {\n      if (hand.length < character.handSize) {\n        addCardToHand(cardFromCharacter)\n      } else {\n        alert(`Your hand is full`)\n      }\n    }\n  }\n\n  return (\n    <div id=\"initial-table\" className=\"cardSet\">\n      <h2 id=\"choose-cards-number\" className=\"header\">\n        Choose {character.handSize} Cards\n      </h2>\n      <div align=\"center\">\n        <p id=\"card-counter\" className=\"card-counter\" align=\"center\">\n          {hand.length}/{character.handSize}\n        </p>\n      </div>\n      <table className=\"cardTable\" align=\"center\">\n        <tbody>\n          <CardTableRowLevelOne\n            cardIsInHand={cardIsInHand}\n            handleCardClick={handleCardClick}\n            cardSet={firstRow}\n            character={character}\n            enhancementOptions={enhancementOptions}\n            handleEnhancementChange={handleEnhancementChange}\n          />\n          <CardTableRowLevelOne\n            cardIsInHand={cardIsInHand}\n            handleCardClick={handleCardClick}\n            cardSet={secondRow}\n            character={character}\n            enhancementOptions={enhancementOptions}\n            handleEnhancementChange={handleEnhancementChange}\n          />\n          <CardTableRowLevelOne\n            cardIsInHand={cardIsInHand}\n            handleCardClick={handleCardClick}\n            cardSet={thirdRow}\n            character={character}\n            enhancementOptions={enhancementOptions}\n            handleEnhancementChange={handleEnhancementChange}\n          />\n          {level >= 2 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              enhancementOptions={enhancementOptions}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelTwoCards}\n              firstLevel={2}\n              level={level}\n              secondCardSet={levelThreeCards}\n              secondLevel={3}\n            />\n          )}\n          {level >= 4 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              enhancementOptions={enhancementOptions}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelFourCards}\n              firstLevel={4}\n              level={level}\n              secondCardSet={levelFiveCards}\n              secondLevel={5}\n            />\n          )}\n          {level >= 6 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              enhancementOptions={enhancementOptions}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelSixCards}\n              firstLevel={6}\n              level={level}\n              secondCardSet={levelSevenCards}\n              secondLevel={7}\n            />\n          )}\n          {level >= 8 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              enhancementOptions={enhancementOptions}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelEightCards}\n              firstLevel={8}\n              level={level}\n              secondCardSet={levelNineCards}\n              secondLevel={9}\n            />\n          )}\n        </tbody>\n      </table>\n      <div>\n        <SelectedHand character={character} hand={hand} />\n      </div>\n      <div align=\"center\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSetStage('selectPerks')}\n        >\n          Go Back To Perks\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          title=\"Must Have a Full Hand\"\n          onClick={() => handleSetStage('playing')}\n          disabled={hand.length < character.handSize}\n        >\n          Confirm Hand\n        </button>\n      </div>\n    </div>\n  )\n}\n\nfunction CardTableRowLevelOne({\n  cardIsInHand,\n  handleCardClick,\n  cardSet,\n  character,\n  enhancementOptions,\n  handleEnhancementChange,\n}) {\n  return (\n    <>\n      <tr>\n        <td className=\"level\">Level 1:</td>\n        {cardSet.map((card) => {\n          return (\n            <td\n              key={card.title}\n              className=\"chooseCardsTable\"\n              onClick={(e) => handleCardClick(e.target)}\n            >\n              <img\n                src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                className={\n                  cardIsInHand(card) ? 'chooseCards add-border' : 'chooseCards'\n                }\n                alt={card.title}\n              />\n              {card.enhancements.map((enhancement) => (\n                <EnhancementIcon\n                  key={enhancement.id}\n                  enhancement={enhancement}\n                />\n              ))}\n            </td>\n          )\n        })}\n      </tr>\n      <tr>\n        <td className=\"enhancement-label\" />\n        {cardSet.map((card) => {\n          return (\n            <td key={`${card.title}-Enhancements`} className=\"enhancement\">\n              {card.enhancements.map((enhancement, index) => {\n                return (\n                  <div\n                    key={`${card.title}-${index}`}\n                    className=\"enhancement-row\"\n                  >\n                    <label className=\"enhancement\">Enhancement:</label>\n                    <select\n                      onChange={(e) =>\n                        handleEnhancementChange(card.title, enhancement.id, e)\n                      }\n                    >\n                      <option value=\"none\">None</option>\n                      {enhancementOptions.map((enhancementOption) => {\n                        return (\n                          <option\n                            key={enhancementOption}\n                            value={enhancementOption}\n                          >\n                            {enhancementOption}\n                          </option>\n                        )\n                      })}\n                    </select>\n                  </div>\n                )\n              })}\n            </td>\n          )\n        })}\n      </tr>\n    </>\n  )\n}\n\nfunction CardTableRowTwoLevels({\n  cardIsInHand,\n  handleCardClick,\n  character,\n  enhancementOptions,\n  handleEnhancementChange,\n  firstCardSet,\n  firstLevel,\n  level,\n  secondCardSet,\n  secondLevel,\n}) {\n  return (\n    <>\n      <tr>\n        <td className=\"level\">Level {firstLevel}:</td>\n        {firstCardSet.map((card) => {\n          return (\n            <td\n              key={card.title}\n              className=\"chooseCardsTable\"\n              onClick={(e) => handleCardClick(e.target)}\n            >\n              <img\n                src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                className={\n                  cardIsInHand(card) ? 'chooseCards add-border' : 'chooseCards'\n                }\n                alt={card.title}\n              />\n              {card.enhancements.map((enhancement) => (\n                <EnhancementIcon\n                  key={enhancement.id}\n                  enhancement={enhancement}\n                />\n              ))}\n            </td>\n          )\n        })}\n        {level >= secondLevel && (\n          <>\n            <td className=\"level\">Level {secondLevel}:</td>\n            {secondCardSet.map((card) => {\n              return (\n                <td\n                  key={card.title}\n                  className=\"chooseCardsTable\"\n                  onClick={(e) => handleCardClick(e.target)}\n                >\n                  <img\n                    src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                    className={\n                      cardIsInHand(card)\n                        ? 'chooseCards add-border'\n                        : 'chooseCards'\n                    }\n                    alt={card.title}\n                  />\n                  {card.enhancements.map((enhancement) => (\n                    <EnhancementIcon\n                      key={enhancement.id}\n                      enhancement={enhancement}\n                    />\n                  ))}\n                </td>\n              )\n            })}\n          </>\n        )}\n      </tr>\n      <tr>\n        <td className=\"enhancement-label\" />\n        {firstCardSet.map((card) => {\n          return (\n            <td key={`${card.title}-Enhancements`} className=\"enhancement\">\n              {card.enhancements.map((enhancement, index) => {\n                return (\n                  <div\n                    key={`${card.title}-${index}`}\n                    className=\"enhancement-row\"\n                  >\n                    <label className=\"enhancement\">Enhancement:</label>\n                    <select\n                      onChange={(e) =>\n                        handleEnhancementChange(card.title, enhancement.id, e)\n                      }\n                    >\n                      <option value=\"none\">None</option>\n                      {enhancementOptions.map((enhancementOption) => {\n                        return (\n                          <option\n                            key={enhancementOption}\n                            value={enhancementOption}\n                          >\n                            {enhancementOption}\n                          </option>\n                        )\n                      })}\n                    </select>\n                  </div>\n                )\n              })}\n            </td>\n          )\n        })}\n        {level >= secondLevel && (\n          <>\n            <td className=\"enhancement-label\" />\n            {secondCardSet.map((card) => {\n              return (\n                <td key={`${card.title}-Enhancements`} className=\"enhancement\">\n                  {card.enhancements.map((enhancement, index) => {\n                    return (\n                      <div\n                        key={`${card.title}-${index}`}\n                        className=\"enhancement-row\"\n                      >\n                        <label className=\"enhancement\">Enhancement:</label>\n                        <select\n                          onChange={(e) =>\n                            handleEnhancementChange(\n                              card.title,\n                              enhancement.id,\n                              e\n                            )\n                          }\n                        >\n                          <option value=\"none\">None</option>\n                          {enhancementOptions.map((enhancementOption) => {\n                            return (\n                              <option\n                                key={enhancementOption}\n                                value={enhancementOption}\n                              >\n                                {enhancementOption}\n                              </option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                    )\n                  })}\n                </td>\n              )\n            })}\n          </>\n        )}\n      </tr>\n    </>\n  )\n}\n\nfunction SelectedHand({ character, hand }) {\n  const firstRow = hand.slice(0, 4)\n  const secondRow = hand.slice(4, 8)\n  const thirdRow = hand.slice(8, 12)\n  return (\n    <table align=\"center\">\n      <tbody>\n        <tr>\n          {firstRow.map((card) => {\n            return (\n              <td key={card.title} className=\"hand\">\n                <img\n                  src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                  className=\"chooseCards\"\n                  alt={card.title}\n                />\n                {card.enhancements.map((enhancement) => (\n                  <EnhancementIcon\n                    key={enhancement.id}\n                    enhancement={enhancement}\n                  />\n                ))}\n              </td>\n            )\n          })}\n        </tr>\n        <tr>\n          {secondRow.map((card) => {\n            return (\n              <td key={card.title} className=\"hand\">\n                <img\n                  src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                  className=\"chooseCards\"\n                  alt={card.title}\n                />\n                {card.enhancements.map((enhancement) => (\n                  <EnhancementIcon\n                    key={enhancement.id}\n                    enhancement={enhancement}\n                  />\n                ))}\n              </td>\n            )\n          })}\n        </tr>\n        <tr>\n          {thirdRow.map((card) => {\n            return (\n              <td key={card.title} className=\"hand\">\n                <img\n                  src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                  className=\"chooseCards\"\n                  alt={card.title}\n                />\n                {card.enhancements.map((enhancement) => (\n                  <EnhancementIcon\n                    key={enhancement.id}\n                    enhancement={enhancement}\n                  />\n                ))}\n              </td>\n            )\n          })}\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction EnhancementIcon({ enhancement }) {\n  return (\n    <>\n      {enhancement.enhancement !== '' && (\n        <img\n          className=\"enhancement-icon\"\n          src={`./images/enhancements/${enhancement.enhancement.toLowerCase()}.png`}\n          style={{ top: enhancement.top, left: enhancement.left }}\n          alt={`Enhancement Name`}\n        />\n      )}\n    </>\n  )\n}\n\nexport default HandSelection\n","import React, { useState } from 'react'\n\nfunction CardContainer({\n  card,\n  cardClass = '',\n  containerClass,\n  cardSelected,\n  character,\n  mustLose,\n  onClick,\n}) {\n  const [trackerButtons, setTrackerButtons] = useState(card.tracker)\n\n  function handleClickTracker(i) {\n    let newTrackerButtons = [...trackerButtons]\n    newTrackerButtons[i].active = !newTrackerButtons[i].active\n    setTrackerButtons(newTrackerButtons)\n  }\n  return (\n    <td\n      key={card.title}\n      className={containerClass}\n      onClick={(e) => onClick(e.target)}\n    >\n      <img\n        src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n        className={\n          cardSelected(card) ? `new-add-border ${cardClass}` : `${cardClass}`\n        }\n        alt={card.title}\n      />\n      {card.enhancements.map((enhancement) => (\n        <EnhancementIcon key={enhancement.id} enhancement={enhancement} />\n      ))}\n      {mustLose && <p>Must Lose</p>}\n      {containerClass === 'active-card' && card.tracker.length > 0 && (\n        <>\n          <br />\n          {card.tracker.map((tracker, i) => (\n            <button\n              disabled={!trackerButtons[i].active}\n              onClick={() => handleClickTracker(i)}\n            >\n              {i + 1}\n            </button>\n          ))}\n        </>\n      )}\n    </td>\n  )\n}\n\nfunction EnhancementIcon({ enhancement }) {\n  return (\n    <>\n      {enhancement.enhancement !== '' && (\n        <img\n          className=\"enhancement-icon\"\n          src={`./images/enhancements/${enhancement.enhancement.toLowerCase()}.png`}\n          style={{ top: enhancement.top, left: enhancement.left }}\n          alt={`Enhancement Name`}\n        />\n      )}\n    </>\n  )\n}\n\nexport default CardContainer\n","import React, { useState } from 'react'\nimport _ from 'lodash'\nimport CardContainer from './CardContainer'\n\nfunction PlayArea({ character, hand, modifierDeck, setHand, staffOfCommand }) {\n  const [hasCardsInPlay, setHasCardsInPlay] = useState(false)\n  const [chosenCards, setChosenCards] = useState([{}, {}, {}])\n  const [discardedCards, setDiscardedCards] = useState([])\n  const [activeCards, setActiveCards] = useState([])\n  const [lostCards, setLostCards] = useState([])\n\n  function anyChosenCardsLeft(newArray) {\n    let cardsStillInPlay = newArray.filter(\n      (value) => Object.keys(value).length !== 0\n    )\n    if (cardsStillInPlay.length > 0) {\n      return true\n    }\n    return false\n  }\n\n  function moveCardsToChosen(cards) {\n    // remove selected cards from hand\n    let newHand = [...hand]\n    cards.forEach((card) => {\n      _.remove(newHand, card)\n    })\n    setHand(newHand)\n\n    // add selected cards to ChosenCards component\n    let newChosenCards = [...chosenCards]\n    newChosenCards[0] = cards[0]\n    newChosenCards[1] = cards[1]\n    setChosenCards(newChosenCards)\n\n    setHasCardsInPlay(true)\n  }\n\n  function moveThirdCardToChosen(cards) {\n    // remove selected cards from hand\n    let newHand = [...hand]\n    cards.forEach((card) => {\n      _.remove(newHand, card)\n    })\n    setHand(newHand)\n\n    // add selected cards to ChosenCards component\n    let newChosenCards = [...chosenCards]\n    newChosenCards[2] = cards[0]\n    setChosenCards(newChosenCards)\n\n    setHasCardsInPlay(true)\n  }\n\n  function moveCardToDiscard(cardDiscarded) {\n    let i = _.indexOf(chosenCards, cardDiscarded)\n    let newChosenCards = [...chosenCards]\n    newChosenCards[i] = {}\n    setChosenCards(newChosenCards)\n    setDiscardedCards([...discardedCards, cardDiscarded])\n    if (!anyChosenCardsLeft(newChosenCards)) {\n      setHasCardsInPlay(false)\n    }\n  }\n\n  function moveDiscardedCardsToLost(cards, resetHand) {\n    setLostCards([...lostCards, ...cards])\n    let newDiscardedCards = [...discardedCards]\n    cards.forEach((card) => {\n      _.remove(newDiscardedCards, card)\n    })\n    if (resetHand) {\n      setHand([...hand, ...newDiscardedCards], setDiscardedCards([]))\n    } else {\n      setDiscardedCards(newDiscardedCards)\n    }\n  }\n\n  function moveActiveCardToDiscard(cardDiscarded) {\n    let newActiveCards = [...activeCards]\n    _.remove(newActiveCards, cardDiscarded)\n    setActiveCards(newActiveCards)\n    setDiscardedCards([...discardedCards, cardDiscarded])\n  }\n\n  function moveCardToLost(cardLost) {\n    let i = _.indexOf(chosenCards, cardLost)\n    let newChosenCards = [...chosenCards]\n    newChosenCards[i] = {}\n    setChosenCards(newChosenCards)\n    setLostCards([...lostCards, cardLost])\n    if (!anyChosenCardsLeft(newChosenCards)) {\n      setHasCardsInPlay(false)\n    }\n  }\n\n  function moveActiveCardToLost(cardLost) {\n    let newActiveCards = [...activeCards]\n    _.remove(newActiveCards, cardLost)\n    setActiveCards(newActiveCards)\n    setLostCards([...lostCards, cardLost])\n  }\n\n  function moveCardToActive(cardActivated) {\n    let i = _.indexOf(chosenCards, cardActivated)\n    let newChosenCards = [...chosenCards]\n    newChosenCards[i] = {}\n    setChosenCards(newChosenCards)\n    setActiveCards([...activeCards, cardActivated])\n    if (!anyChosenCardsLeft(newChosenCards)) {\n      setHasCardsInPlay(false)\n    }\n  }\n\n  function handleMoveCardsBackToHand(cardsRecovered) {\n    setHand([...hand, ...cardsRecovered])\n  }\n\n  function removeCardFromDiscard(card) {\n    _.remove(discardedCards, card)\n  }\n\n  function moveLostCardToHand(card) {\n    setHand([...hand, card])\n    let newLostCards = [...lostCards]\n    _.remove(newLostCards, card)\n    setLostCards(newLostCards)\n  }\n\n  return (\n    <>\n      <div id=\"play-game\" align=\"center\">\n        <table id=\"play-area\" align=\"center\">\n          <tbody>\n            <tr>\n              <ChosenCards\n                character={character}\n                chosenCards={chosenCards}\n                modifierDeck={modifierDeck}\n                moveCardToActive={moveCardToActive}\n                moveCardToDiscard={moveCardToDiscard}\n                moveCardToLost={moveCardToLost}\n                staffOfCommand={staffOfCommand}\n              />\n              <ActiveCards\n                character={character}\n                activeCards={activeCards}\n                moveActiveCardToDiscard={moveActiveCardToDiscard}\n                moveActiveCardToLost={moveActiveCardToLost}\n              />\n            </tr>\n            <tr>\n              <DiscardedCards\n                character={character}\n                discardedCards={discardedCards}\n                handleMoveCardsBackToHand={handleMoveCardsBackToHand}\n                moveDiscardedCardsToLost={moveDiscardedCardsToLost}\n                removeCardFromDiscard={removeCardFromDiscard}\n              />\n              <LostCards\n                character={character}\n                lostCards={lostCards}\n                moveLostCardToHand={moveLostCardToHand}\n              />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <HandCards\n        character={character}\n        hand={hand}\n        moveThirdCardToChosen={moveThirdCardToChosen}\n        moveCardsToChosen={moveCardsToChosen}\n        hasCardsInPlay={hasCardsInPlay}\n        staffOfCommand={staffOfCommand}\n      />\n    </>\n  )\n}\n\nfunction DiscardedCards({\n  character,\n  discardedCards,\n  handleMoveCardsBackToHand,\n  moveDiscardedCardsToLost,\n  removeCardFromDiscard,\n}) {\n  const [selectedCards, setSelectedCards] = useState([])\n  const [resting, setResting] = useState(false)\n  const [canRerollLost, setCanRerollLost] = useState(false)\n  const [longResting, setLongResting] = useState(false)\n  const [cardToLose, setCardToLose] = useState({})\n  const firstRow = discardedCards.slice(0, 5)\n  const secondRow = discardedCards.slice(5, 10)\n  const thirdRow = discardedCards.slice(10, 15)\n\n  function handleOnClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'hand') {\n      cardClicked = cardClicked.firstChild\n    }\n    let characterCard = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    if (longResting) {\n      setCardToLose(characterCard)\n    } else {\n      if (selectedCards.some((card) => card.title === cardClicked.alt)) {\n        let newSelection = [...selectedCards]\n        _.remove(newSelection, characterCard)\n        setSelectedCards(newSelection)\n      } else {\n        if (selectedCards.length < 2) {\n          setSelectedCards([...selectedCards, characterCard])\n        } else {\n          let newSelection = [...selectedCards]\n          newSelection.shift()\n          newSelection.push(characterCard)\n          setSelectedCards(newSelection)\n        }\n      }\n    }\n  }\n\n  function cardSelected(cardClicked) {\n    if (selectedCards.some((card) => card.title === cardClicked.title)) {\n      return true\n    }\n    return false\n  }\n\n  function handleRecoverDiscardedCard() {\n    handleMoveCardsBackToHand(selectedCards)\n    removeCardFromDiscard(selectedCards[0])\n    setSelectedCards([])\n  }\n\n  function handleLoseCardsAvoidingDamage(cards) {\n    moveDiscardedCardsToLost(cards, false)\n    setSelectedCards([])\n  }\n\n  function handleShortRest() {\n    setResting(true)\n    let cardToLose =\n      discardedCards[Math.floor(Math.random() * discardedCards.length)]\n    setCardToLose(cardToLose)\n    setCanRerollLost(true)\n  }\n\n  function handleLoseCardFromRest() {\n    moveDiscardedCardsToLost([cardToLose], true)\n    setResting(false)\n    setCanRerollLost(false)\n    setCardToLose({})\n    setLongResting(false)\n  }\n\n  function handleRerollLostCard() {\n    let cardsToChooseFrom = [...discardedCards]\n    _.remove(cardsToChooseFrom, cardToLose)\n    let newCardToLose =\n      cardsToChooseFrom[Math.floor(Math.random() * cardsToChooseFrom.length)]\n    setCardToLose(newCardToLose)\n    setCanRerollLost(false)\n  }\n\n  function handleLongRest() {\n    setLongResting(true)\n  }\n\n  function cardBoarder(card) {\n    if (card === cardToLose && resting) {\n      return 'chooseCards must-lose'\n    } else if (card === cardToLose && longResting) {\n      return 'chooseCards discard-selected'\n    }\n    return 'chooseCards'\n  }\n\n  return (\n    <td\n      id=\"discarded-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Discarded Cards\n      {longResting && <p id=\"choose-to-lose\">Choose One Card to Lose</p>}\n      <table id=\"discard-table\">\n        <tbody>\n          <tr>\n            {firstRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={cardBoarder(card)}\n                containerClass={'discarded'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                mustLose={card === cardToLose && resting}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {secondRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={cardBoarder(card)}\n                containerClass={'discarded'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                mustLose={card === cardToLose && resting}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {thirdRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={cardBoarder(card)}\n                containerClass={'discarded'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                mustLose={card === cardToLose && resting}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <button\n        id=\"short-rest-button\"\n        disabled={discardedCards.length < 2 || resting || longResting}\n        className=\"button\"\n        onClick={() => handleShortRest()}\n        type=\"button\"\n        title=\"Must Have At Least 2 Discarded Cards And No Cards in Play\"\n      >\n        Short Rest\n      </button>\n      <button\n        id=\"long-rest-button\"\n        disabled={discardedCards.length < 2 || resting || longResting}\n        className=\"button\"\n        onClick={() => handleLongRest()}\n        type=\"button\"\n        title=\"Must Have At Least 2 Discarded Cards And No Cards in Play\"\n      >\n        Long Rest\n      </button>\n      <button\n        id=\"recover-discard-button\"\n        disabled={selectedCards.length !== 1 || resting || longResting}\n        className=\"button\"\n        onClick={() => handleRecoverDiscardedCard(selectedCards[0])}\n        type=\"button\"\n        title=\"Must Have A Discarded Card Selected\"\n      >\n        Recover Discarded Card\n      </button>\n      <br />\n      <button\n        id=\"lose-discard-button\"\n        className=\"button\"\n        disabled={Object.keys(cardToLose).length === 0}\n        onClick={() => handleLoseCardFromRest()}\n        type=\"button\"\n        title=\"Must Be Resting\"\n      >\n        Lose Card From Rest\n      </button>\n      <button\n        id=\"reroll-random-card-button\"\n        className=\"button\"\n        disabled={!canRerollLost}\n        onClick={() => handleRerollLostCard()}\n        type=\"button\"\n        title=\"Can Only Be Used Once Per Short Rest\"\n      >\n        Reroll Lost Card\n      </button>\n      <button\n        id=\"lose-discard-button2\"\n        className=\"button\"\n        disabled={selectedCards.length !== 2}\n        onClick={() => handleLoseCardsAvoidingDamage(selectedCards)}\n        type=\"button\"\n        title=\"Must Have A Discarded Card Selected - Must Lose 2 to Avoid Damage\"\n      >\n        Lose Cards To Avoid Damage\n      </button>\n    </td>\n  )\n}\n\nfunction ActiveCards({\n  character,\n  activeCards,\n  moveActiveCardToDiscard,\n  moveActiveCardToLost,\n}) {\n  const [selectedCard, setSelectedCard] = useState({})\n  const firstRow = activeCards.slice(0, 3)\n  const secondRow = activeCards.slice(3, 6)\n\n  function cardSelected(card) {\n    if (selectedCard === card) {\n      return true\n    }\n    return false\n  }\n\n  function handleCardClick(cardClicked) {\n    if (cardClicked.tagName === 'BUTTON' || cardClicked.tagName === 'BR') {\n      return\n    }\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'active-card') {\n      cardClicked = cardClicked.firstChild\n    }\n    let cardToSelect = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    cardToSelect === selectedCard\n      ? setSelectedCard({})\n      : setSelectedCard(cardToSelect)\n  }\n\n  function handleDiscardCard(card) {\n    moveActiveCardToDiscard(card)\n    setSelectedCard({})\n  }\n\n  function handleLoseCard(card) {\n    moveActiveCardToLost(card)\n    setSelectedCard({})\n  }\n\n  return (\n    <td\n      id=\"active-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Active Cards\n      <br />\n      <table id=\"active-table\" align=\"center\">\n        <tbody>\n          <tr>\n            {firstRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'active-card'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleCardClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {secondRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'active-card'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleCardClick}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <button\n        id=\"discard-active-card\"\n        className=\"button tooltip\"\n        disabled={Object.keys(selectedCard).length === 0}\n        onClick={() => handleDiscardCard(selectedCard)}\n        type=\"button\"\n        title=\"Must Have an Active Card Selected\"\n      >\n        Discard Active Card\n      </button>\n      <button\n        id=\"lose-active-card\"\n        className=\"button tooltip\"\n        disabled={Object.keys(selectedCard).length === 0}\n        onClick={() => handleLoseCard(selectedCard)}\n        type=\"button\"\n        title=\"Must Have an Active Card Selected\"\n      >\n        Lose Active Card\n      </button>\n      <br />\n    </td>\n  )\n}\n\nfunction ChosenCards({\n  character,\n  chosenCards,\n  modifierDeck,\n  moveCardToActive,\n  moveCardToDiscard,\n  moveCardToLost,\n  staffOfCommand,\n}) {\n  const [selectedCard, setSelectedCard] = useState({})\n\n  function cardSelected(card) {\n    if (selectedCard === card) {\n      return true\n    }\n    return false\n  }\n\n  function handleCardClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'hand') {\n      cardClicked = cardClicked.firstChild\n    }\n    let cardToSelect = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    cardToSelect === selectedCard\n      ? setSelectedCard({})\n      : setSelectedCard(cardToSelect)\n  }\n\n  function handleDiscardChosenCard() {\n    moveCardToDiscard(selectedCard)\n    setSelectedCard({})\n  }\n\n  function handleLostChosenCard() {\n    moveCardToLost(selectedCard)\n    setSelectedCard({})\n  }\n\n  function handleActivateChosenCard() {\n    moveCardToActive(selectedCard)\n    setSelectedCard({})\n  }\n\n  return (\n    <td\n      className=\"chosen-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Chosen Cards\n      <br />\n      <table align=\"center\">\n        <tbody>\n          <tr>\n            {Object.keys(chosenCards[0]).length === 0 ? (\n              <td id=\"chosen-card-1\" className=\"card-in-play\">\n                <img\n                  alt=\"Chosen Card 1\"\n                  src={`./images/character-ability-cards/${character.initials}/${character.initials}-back.png`}\n                  className=\"card\"\n                />\n              </td>\n            ) : (\n              <CardContainer\n                card={chosenCards[0]}\n                cardClass={'chooseCards'}\n                containerClass={'card-in-play'}\n                cardSelected={cardSelected}\n                character={character}\n                onClick={handleCardClick}\n              />\n            )}\n            {Object.keys(chosenCards[1]).length === 0 ? (\n              <td id=\"chosen-card-2\" className=\"card-in-play\">\n                <img\n                  alt=\"Chosen Card 1\"\n                  src={`./images/character-ability-cards/${character.initials}/${character.initials}-back.png`}\n                  className=\"card\"\n                />\n              </td>\n            ) : (\n              <CardContainer\n                card={chosenCards[1]}\n                cardClass={'chooseCards'}\n                containerClass={'card-in-play'}\n                cardSelected={cardSelected}\n                character={character}\n                onClick={handleCardClick}\n              />\n            )}\n            {staffOfCommand && Object.keys(chosenCards[2]).length === 0 && (\n              <td id=\"chosen-card-3\" className=\"card-in-play\">\n                <img\n                  alt=\"Chosen Card 1\"\n                  src={`./images/character-ability-cards/${character.initials}/${character.initials}-back.png`}\n                  className=\"card\"\n                />\n              </td>\n            )}\n            {staffOfCommand && Object.keys(chosenCards[2]).length !== 0 && (\n              <CardContainer\n                card={chosenCards[2]}\n                cardClass={'chooseCards'}\n                containerClass={'card-in-play'}\n                cardSelected={cardSelected}\n                character={character}\n                onClick={handleCardClick}\n              />\n            )}\n          </tr>\n        </tbody>\n      </table>\n      <div>\n        <br />\n        <button\n          id=\"discard-button\"\n          className=\"button tooltip\"\n          disabled={Object.keys(selectedCard).length === 0}\n          type=\"button\"\n          title=\"Must Have a Card In Play Selected\"\n          onClick={() => handleDiscardChosenCard()}\n        >\n          Discard Card\n        </button>\n        <button\n          id=\"lose-button\"\n          className=\"button tooltip\"\n          disabled={Object.keys(selectedCard).length === 0}\n          onClick={() => handleLostChosenCard()}\n          type=\"button\"\n          title=\"Must Have a Card In Play Selected\"\n        >\n          Lose Card\n        </button>\n        <button\n          id=\"activate-button\"\n          className=\"button tooltip\"\n          disabled={Object.keys(selectedCard).length === 0}\n          onClick={() => handleActivateChosenCard()}\n          type=\"button\"\n          title=\"Must Have a Card In Play Selected\"\n        >\n          Move Card to Active\n        </button>\n      </div>\n      <ModifierDeck modifierDeck={modifierDeck} />\n    </td>\n  )\n}\n\nfunction ModifierDeck({ modifierDeck }) {\n  const [playedModifyCards, setPlayedModifyCards] = useState([])\n  const [localModifierDeck, setLocalModifierDeck] = useState(modifierDeck)\n  const [mustShuffle, setMustShuffle] = useState(false)\n  const [extraBlessCount, setExtraBlessCount] = useState(0)\n  const [extraCurseCount, setExtraCurseCount] = useState(0)\n  // PICK UP HERE: add a modal component and hand showModal state\n  const [displayModal, setDisplayModal] = useState(false)\n\n  const minus1Card = {\n    name: 'extraMinus1',\n    image: './images/attack-modifiers/base/player-mod/am-pm-minus1.png',\n  }\n  const curseCard = {\n    name: 'extraCurse',\n    image: './images/attack-modifiers/base/player-mod/am-pm-curse.png',\n  }\n  const blessingCard = {\n    name: 'extraBless',\n    image: './images/attack-modifiers/base/player-mod/am-pm-bless.png',\n  }\n\n  function handleFlipModifier() {\n    let newLocalModifierDeck = [...localModifierDeck]\n    setPlayedModifyCards([...playedModifyCards, newLocalModifierDeck[0]])\n    let playedCard = newLocalModifierDeck.shift()\n    setLocalModifierDeck(newLocalModifierDeck)\n    if (playedCard.name === 'times2' || playedCard.name === 'miss') {\n      setMustShuffle(true)\n    } else if (playedCard.name === 'extraBless') {\n      setExtraBlessCount(extraBlessCount - 1)\n    } else if (playedCard.name === 'extraCurse') {\n      setExtraCurseCount(extraCurseCount - 1)\n    }\n  }\n\n  function handleShuffleModifierDeck(addPlayedCards) {\n    let shuffledModifierDeck = []\n    if (addPlayedCards) {\n      let playedMinusBlessCurseMinusOne = [...playedModifyCards]\n      _.remove(playedMinusBlessCurseMinusOne, blessingCard)\n      _.remove(playedMinusBlessCurseMinusOne, curseCard)\n      _.remove(playedMinusBlessCurseMinusOne, minus1Card)\n      shuffledModifierDeck = [\n        ...localModifierDeck,\n        ...playedMinusBlessCurseMinusOne,\n      ]\n      setPlayedModifyCards([])\n      setMustShuffle(false)\n    } else {\n      shuffledModifierDeck = [...localModifierDeck]\n    }\n    for (let i = shuffledModifierDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = shuffledModifierDeck[i]\n      shuffledModifierDeck[i] = shuffledModifierDeck[j]\n      shuffledModifierDeck[j] = temp\n    }\n    setLocalModifierDeck(shuffledModifierDeck)\n  }\n\n  function handleAddBless() {\n    if (extraBlessCount < 10) {\n      let newLocalModifierDeck = [...localModifierDeck, blessingCard]\n      // When I had it shuffle once, the bless was always the last card. Suffling twice fixes this, but there is likely a better way to do this.\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      setLocalModifierDeck(newLocalModifierDeck)\n      setExtraBlessCount(extraBlessCount + 1)\n    }\n  }\n\n  function handleAddCurse() {\n    if (extraCurseCount < 10) {\n      let newLocalModifierDeck = [...localModifierDeck, curseCard]\n      // When I had it shuffle once, the bless was always the last card. Suffling twice fixes this, but there is likely a better way to do this.\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      setLocalModifierDeck(newLocalModifierDeck)\n      setExtraCurseCount(extraCurseCount + 1)\n    }\n  }\n\n  function handleAddMinusOneCard() {\n    let newLocalModifierDeck = [...localModifierDeck, minus1Card]\n    // When I had it shuffle once, the bless was always the last card. Suffling twice fixes this, but there is likely a better way to do this.\n    for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = newLocalModifierDeck[i]\n      newLocalModifierDeck[i] = newLocalModifierDeck[j]\n      newLocalModifierDeck[j] = temp\n    }\n    for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = newLocalModifierDeck[i]\n      newLocalModifierDeck[i] = newLocalModifierDeck[j]\n      newLocalModifierDeck[j] = temp\n    }\n    setLocalModifierDeck(newLocalModifierDeck)\n  }\n\n  function handleResetModifierDeck() {\n    let newLocalModifierDeck = [...localModifierDeck, ...playedModifyCards]\n    // Probably a better way to do this...\n    _.remove(newLocalModifierDeck, minus1Card)\n    _.remove(newLocalModifierDeck, curseCard)\n    _.remove(newLocalModifierDeck, blessingCard)\n    setLocalModifierDeck(newLocalModifierDeck)\n    setPlayedModifyCards([])\n    setExtraCurseCount(0)\n    setExtraBlessCount(0)\n  }\n\n  function showModal() {\n    setDisplayModal(true)\n  }\n\n  function hideModal() {\n    setDisplayModal(false)\n  }\n  return (\n    <div id=\"attack-modifier-deck\" align=\"center\">\n      {mustShuffle && (\n        <h2 id=\"mustShuffle\" style={{ color: 'red' }}>\n          Must Shuffle At End of Turn\n        </h2>\n      )}\n      <h2 id=\"cardsInDeck\" style={{ color: 'white' }}>\n        Cards in Deck:{` ${localModifierDeck.length}`}\n      </h2>\n      <h6 id=\"blessesInDeck\" style={{ color: 'white' }}>\n        Extra Blesses in Deck: {extraBlessCount}\n      </h6>\n      <h6 id=\"cursesInDeck\" style={{ color: 'white' }}>\n        Extra Curses in Deck: {extraCurseCount}\n      </h6>\n      {localModifierDeck.length > 0 && (\n        <img\n          alt=\"Attack Modifier Deck\"\n          id=\"amDeck\"\n          className=\"attack-modifier\"\n          onClick={() => handleFlipModifier()}\n          src=\"./images/modifier-deck/cardBack.png\"\n        />\n      )}\n      {playedModifyCards.length > 0 && (\n        <img\n          alt=\"Played Modifiers\"\n          id=\"playedModifiers\"\n          className=\"attack-modifier\"\n          onClick={() => showModal()}\n          src={playedModifyCards[playedModifyCards.length - 1].image}\n        />\n      )}\n      <br />\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleShuffleModifierDeck(true)}\n      >\n        Shuffle Modifiers\n      </button>\n      <br />\n      <button className=\"button\" type=\"button\" onClick={() => handleAddBless()}>\n        Bless\n      </button>\n      <button className=\"button\" type=\"button\" onClick={() => handleAddCurse()}>\n        Curse\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleAddMinusOneCard()}\n      >\n        Add -1 Card\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleResetModifierDeck()}\n      >\n        Reset Modifier Deck\n      </button>\n      <ModifierModal\n        handleClose={hideModal}\n        playedModifierCards={playedModifyCards}\n        show={displayModal}\n      />\n    </div>\n  )\n}\n\nfunction ModifierModal({ handleClose, playedModifierCards, show }) {\n  const style = show ? { display: 'block' } : { display: 'none' }\n  return (\n    <div id=\"zoomModal\" style={style}>\n      <div id=\"zoomContent\">\n        <h2 style={{ color: 'black', textAlign: 'center' }}>\n          Played Modifiers\n        </h2>\n        <span className=\"close\" onClick={handleClose}>\n          &times;\n        </span>\n        <div id=\"used-modifier-cards\">\n          {playedModifierCards.map((card, index) => (\n            <img alt={card.title} src={card.image} key={index} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction LostCards({ character, lostCards, moveLostCardToHand }) {\n  const [selectedCard, setSelectedCard] = useState({})\n  const firstRow = lostCards.slice(0, 5)\n  const secondRow = lostCards.slice(5, 10)\n  const thirdRow = lostCards.slice(10, 15)\n\n  function cardSelected(card) {\n    if (selectedCard === card) {\n      return true\n    }\n    return false\n  }\n\n  function handleOnClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'hand') {\n      cardClicked = cardClicked.firstChild\n    }\n    let cardToSelect = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    cardToSelect === selectedCard\n      ? setSelectedCard({})\n      : setSelectedCard(cardToSelect)\n  }\n\n  function handleRecoverLostCard(card) {\n    moveLostCardToHand(card)\n    setSelectedCard({})\n  }\n\n  return (\n    <td\n      id=\"lost-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Lost Cards\n      <br />\n      <table id=\"lost-table\">\n        <tbody>\n          <tr>\n            {firstRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'lost'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {secondRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'lost'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {thirdRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'lost'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <button\n        id=\"recover-lost\"\n        className=\"button\"\n        disabled={Object.keys(selectedCard).length === 0}\n        onClick={() => handleRecoverLostCard(selectedCard)}\n        type=\"button\"\n        title=\"Must Have a Lost Card Selected\"\n      >\n        Recover Lost Card\n      </button>\n    </td>\n  )\n}\n\nfunction HandCards({\n  character,\n  hand,\n  moveCardsToChosen,\n  moveThirdCardToChosen,\n  hasCardsInPlay,\n  staffOfCommand,\n}) {\n  const rowOne = hand.slice(0, 4)\n  const rowTwo = hand.slice(4, 8)\n  const rowThree = hand.slice(8, 12)\n\n  const [selectedCards, setSelectedCards] = useState([])\n\n  function handleOnClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'hand') {\n      cardClicked = cardClicked.firstChild\n    }\n    let characterCard = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    if (selectedCards.some((card) => card.title === cardClicked.alt)) {\n      let newSelection = [...selectedCards]\n      _.remove(newSelection, characterCard)\n      setSelectedCards(newSelection)\n    } else {\n      if (selectedCards.length < 2) {\n        setSelectedCards([...selectedCards, characterCard])\n      } else {\n        let newSelection = [...selectedCards]\n        newSelection.shift()\n        newSelection.push(characterCard)\n        setSelectedCards(newSelection)\n      }\n    }\n  }\n\n  function cardSelected(cardClicked) {\n    if (selectedCards.some((card) => card.title === cardClicked.title)) {\n      return true\n    }\n    return false\n  }\n\n  function handlePlayCards() {\n    moveCardsToChosen(selectedCards)\n    setSelectedCards([])\n  }\n\n  function handlePlayStaffOfCommand() {\n    let cardToPlay = selectedCards\n    moveThirdCardToChosen(cardToPlay)\n    setSelectedCards([])\n  }\n\n  return (\n    <>\n      <div id=\"hand-cards\">\n        <table align=\"center\">\n          <tbody>\n            <tr>\n              {rowOne.map((card) => (\n                <CardContainer\n                  key={card.title}\n                  card={card}\n                  containerClass=\"hand\"\n                  cardSelected={cardSelected}\n                  character={character}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </tr>\n            <tr>\n              {rowTwo.map((card) => (\n                <CardContainer\n                  key={card.title}\n                  card={card}\n                  containerClass=\"hand\"\n                  cardSelected={cardSelected}\n                  character={character}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </tr>\n            <tr>\n              {rowThree.map((card) => (\n                <CardContainer\n                  key={card.title}\n                  card={card}\n                  containerClass=\"hand\"\n                  cardSelected={cardSelected}\n                  character={character}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div id=\"confirm-buttons\" align=\"center\">\n        <button\n          id=\"play-cards-button\"\n          className=\"button\"\n          disabled={selectedCards.length !== 2 || hasCardsInPlay}\n          type=\"button\"\n          title=\"Must Select 2 Cards, Not Have Any Cards In Play, And Not Be Resting\"\n          onClick={() => handlePlayCards()}\n        >\n          Play Cards\n        </button>\n        {staffOfCommand && (\n          <button\n            id=\"play-third-card\"\n            className=\"button\"\n            disabled={!hasCardsInPlay || selectedCards.length !== 1}\n            onClick={() => handlePlayStaffOfCommand()}\n            type=\"button\"\n            title=\"Must Have Played Cards\"\n          >\n            Play third card with Staff of Command\n          </button>\n        )}\n        <button\n          id=\"lose-hand-card\"\n          className=\"button\"\n          disabled={selectedCards.length !== 1}\n          type=\"button\"\n          title=\"Must Have One Card Selected\"\n        >\n          Lose Card To Avoid Damage\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default PlayArea\n","import React, { useState } from 'react'\nimport './App.css'\nimport _ from 'lodash'\nimport {\n  Button,\n  Field,\n  Input,\n  Select,\n  StackView,\n  ThemeProvider,\n  TextArea,\n} from '@planning-center/ui-kit'\nimport CharacterSelection from './CharacterSelection'\nimport PerkSelection from './PerkSelection'\nimport HandSelection from './HandSelection'\nimport PlayArea from './PlayArea'\nimport Cookies from 'universal-cookie'\n\nfunction App() {\n  const [stage, setStage] = useState('selectCharacter')\n  const [game, setGame] = useState('gloomhaven')\n  const [character, setCharacter] = useState({})\n  const [level, setLevel] = useState(1)\n  const [hand, setHand] = useState([])\n  const [modifierDeck, setModifierDeck] = useState([\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus2',\n      image: './images/attack-modifiers/base/player/am-minus2.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus2.png',\n    },\n    {\n      name: 'miss',\n      image: './images/attack-modifiers/base/player/am-miss.png',\n    },\n    {\n      name: 'times2',\n      image: './images/attack-modifiers/base/player/am-x2.png',\n    },\n  ])\n  const [staffOfCommand, setStaffOfCommand] = useState(false)\n  const allCharacterData = getGameCharacters(game)\n  const cookies = new Cookies()\n\n  function getGameCharacters(gameName) {\n    if (gameName === 'gloomhaven') {\n      return require('./gloomhavenCharacterData.json')\n    }\n  }\n  function handleGameChange(gameName) {\n    setGame(gameName)\n  }\n\n  function handleSetStage(stage) {\n    setStage(stage)\n  }\n\n  function handleSetCharacter(characterName) {\n    let characterData = allCharacterData.find((x) => x.name === characterName)\n    if (characterName !== cookies.get('character')) {\n      cookies.remove('perks')\n      cookies.remove('modifierChanges')\n    }\n    cookies.set('character', characterData.name, {\n      path: '/',\n      maxAge: 31104000,\n    })\n    setCharacter(characterData, setStage('selectPerks'))\n  }\n\n  function handleUpdateCharacter(character) {\n    setCharacter(character)\n  }\n\n  function handleSetLevel(level) {\n    cookies.set('level', level, { maxAge: 31104000 })\n    setLevel(level)\n  }\n\n  function addCardToHand(cardToAdd) {\n    setHand([...hand, cardToAdd])\n  }\n\n  function removeCardFromHand(cardReceived) {\n    let cardToRemove = hand.find((card) => card.title === cardReceived.title)\n    let previousHand = [...hand]\n    let newHand = _.reject(previousHand, ['title', cardToRemove.title])\n    setHand(newHand)\n  }\n\n  function modifyModifierDeck(cardsToRemove, cardsToAdd) {\n    // Function to find index for cards to remove\n    function findWithAttr(array, attr, value) {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i][attr] === value) {\n          return i\n        }\n      }\n      return -1\n    }\n\n    // Add cards to modifier deck\n    let newModifierDeck = modifierDeck.concat(cardsToAdd)\n\n    // Remove cards from modifier deck\n    let modifierWithCardsRemoved = [...newModifierDeck]\n    cardsToRemove.forEach((card) => {\n      let index = findWithAttr(modifierWithCardsRemoved, 'name', card.name)\n      modifierWithCardsRemoved.splice(index, 1)\n    })\n\n    // Shuffle new deck\n    for (let i = modifierWithCardsRemoved.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = modifierWithCardsRemoved[i]\n      modifierWithCardsRemoved[i] = modifierWithCardsRemoved[j]\n      modifierWithCardsRemoved[j] = temp\n    }\n\n    // Set state with new deck\n    setModifierDeck(modifierWithCardsRemoved)\n  }\n\n  function handleStaffOfCommand(selected) {\n    setStaffOfCommand(selected)\n  }\n\n  function resetModifierDeck() {\n    setModifierDeck([\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus2',\n        image: './images/attack-modifiers/base/player/am-minus2.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus2.png',\n      },\n      {\n        name: 'miss',\n        image: './images/attack-modifiers/base/player/am-miss.png',\n      },\n      {\n        name: 'times2',\n        image: './images/attack-modifiers/base/player/am-x2.png',\n      },\n    ])\n  }\n\n  return (\n    <>\n      {stage === 'selectCharacter' && (\n        <>\n          <CharacterSelection\n            availableCharacters={allCharacterData}\n            handleGameChange={handleGameChange}\n            handleSetCharacter={handleSetCharacter}\n            handleSetLevel={handleSetLevel}\n            handleStaffOfCommand={handleStaffOfCommand}\n            level={level}\n          />\n        </>\n      )}\n      {stage === 'selectPerks' && (\n        <PerkSelection\n          modifyModifierDeck={modifyModifierDeck}\n          character={character}\n          handleSetStage={handleSetStage}\n          characterPerks={character.perks}\n          resetModifierDeck={resetModifierDeck}\n        />\n      )}\n      {stage === 'selectHand' && (\n        <HandSelection\n          addCardToHand={addCardToHand}\n          character={character}\n          level={level}\n          hand={hand}\n          handleUpdateCharacter={handleUpdateCharacter}\n          handleSetStage={handleSetStage}\n          removeCardFromHand={removeCardFromHand}\n        />\n      )}\n      {stage === 'playing' && (\n        <PlayArea\n          character={character}\n          hand={hand}\n          modifierDeck={modifierDeck}\n          setHand={setHand}\n          staffOfCommand={staffOfCommand}\n        />\n      )}\n      <Feedback />\n    </>\n  )\n}\n\nfunction Feedback() {\n  const [displayModal, setDisplayModal] = useState(false)\n\n  function handleSubmitFeedback() {\n    setDisplayModal(true)\n  }\n\n  function hideModal() {\n    setDisplayModal(false)\n  }\n\n  return (\n    <div className=\"footer\">\n      <p>\n        Did you run into a bug or do you have some feedback about the app? I'd\n        love to hear about it!\n      </p>\n      <button onClick={handleSubmitFeedback}>Submit Feedback</button>\n      <FeedbackModal show={displayModal} hideModal={hideModal} />\n    </div>\n  )\n}\n\nfunction FeedbackModal({ show, hideModal }) {\n  const style = show ? { display: 'block' } : { display: 'none' }\n  const [title, setTitle] = useState('')\n  const [type, setType] = useState('')\n  const [body, setBody] = useState('')\n  const [submitted, setSubmitted] = useState(false)\n  const [submissionError, setSubmissionError] = useState(false)\n  const [showErrors, setShowErrors] = useState(false)\n  const { Octokit } = require('@octokit/rest')\n  const octokit = new Octokit({\n    auth: process.env.REACT_APP_GITHUB_KEY,\n  })\n\n  function handleSubmitForm() {\n    if (title !== '' && type !== '' && body !== '') {\n      setShowErrors(false)\n      setSubmitted(true)\n      octokit.issues\n        .create({\n          owner: 'nicholaskillin',\n          repo: 'gloomhaven-hand-manager',\n          title: title,\n          body: body,\n          labels: [type],\n        })\n        .catch((err) => {\n          setSubmissionError(true)\n          return\n        })\n    } else {\n      setShowErrors(true)\n    }\n  }\n\n  return (\n    <div id=\"zoomModal\" style={style}>\n      <div id=\"zoomFeedbackContent\">\n        <span className=\"close\" onClick={hideModal}>\n          &times;\n        </span>\n        <h1>Feedback</h1>\n        {showErrors && (\n          <h1 style={{ color: 'red' }}>Please fill out all fields</h1>\n        )}\n        {!submitted && (\n          <ThemeProvider>\n            <StackView spacing={1}>\n              <Field\n                inline\n                label=\"Subject\"\n                helpContent=\"Brief sentence describing the feedback\"\n              >\n                <Input\n                  onChange={({ target }) => setTitle(target.value)}\n                  style={{ color: 'black' }}\n                />\n              </Field>\n              <Field\n                inline\n                label=\"Type\"\n                helpContent=\"Is this a bug or a feature request?\"\n              >\n                <Select\n                  emptyValue=\"Bug or Feature Request?\"\n                  tooltip={{ title: 'Bug or Feature Request' }}\n                  onChange={(e) => setType(e.value)}\n                  style={{ color: 'black' }}\n                >\n                  <Select.Option value=\"bug\">Bug</Select.Option>\n                  <Select.Option value=\"featureRequest\">\n                    Feature Request\n                  </Select.Option>\n                </Select>\n              </Field>\n              <Field\n                inline\n                label=\"Description\"\n                helpContent=\"Please be detailed here if you found a bug. The more details the better.\"\n              >\n                <TextArea\n                  onChange={({ target }) => setBody(target.value)}\n                  style={{ color: 'black', height: '200px' }}\n                  placeholder=\"Please include as many details as you can for bugs\"\n                />\n              </Field>\n              <Field inline>\n                <Button onClick={handleSubmitForm}>Submit</Button>\n              </Field>\n            </StackView>\n          </ThemeProvider>\n        )}\n        {submitted && !submissionError && (\n          <h1>Thank you for your submission!</h1>\n        )}\n        {submissionError && (\n          <p>\n            Welp, seems like there was an issue sending your feedback. You can\n            visit the{' '}\n            <a\n              href=\"https://github.com/nicholaskillin/gloomhaven-hand-manager/issues\"\n              target=\"_blank\"\n            >\n              Github Repo\n            </a>{' '}\n            to provide that feedback if you'd like.\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}